#!/bin/bash
set -euo pipefail
set -x

ROOT="$(dirname $( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd ))"
cd "${ROOT}"
source script/common
IN_DOCKER="${IN_DOCKER:-no}"
VERSION="${VERSION:-devbuild}"
DEB_BUILD="${DEB_BUILD:-no}"
DO_WEB="${SKIP_WEB:-yes}"

BUILDARCH="${BUILDARCH:-$(uname -m)}"

img=$(latestpibuilder ${BUILDARCH})

if [ "${IN_DOCKER}" = "no" ]; then
  docker run -it --rm \
    -e IN_DOCKER=yes \
    -e BUILDARCH="${BUILDARCH}" \
    -e VERSION="${VERSION}" \
    -e DEB_BUILD="${DEB_BUILD}" \
    -v "${ROOT}":/app \
    -w /src \
    ${img} \
    /app/script/$(basename $0)

  exit
fi

# Everything below is inside docker

if [ ! -d /src/web ]; then
  echo "No /src"
  ls -l /src
  exit 1
fi

ls -l /src

cd /app
cp -r \
  .nvmrc \
  cmd \
  vendor \
  go.mod \
  go.sum \
  /src/

rsync -a /app/internal/ /src/internal/

if [ "${DO_WEB}" = "yes" ]; then
  rsync -a --exclude=/app/web/node_modules /app/web/ /src/web/

  . ~/.bashrc
  echo $PATH
  cd /src/web
  npm install
  npm run build
  mkdir -p /src/internal/sportsmatrix/assets
  mv /src/web/build /src/internal/sportsmatrix/assets/web
fi

cd /src

export CGO_ENABLED=1
export GOCACHE=/app/.cache

go build -o /app/sportsmatrix.${BUILDARCH} -ldflags="-X github.com/robbydyer/sports/internal/sportsmatrix.version=${VERSION}" ./cmd/sportsmatrix

echo "=> DONE created ${ROOT}/sportsmatrix.${BUILDARCH}"

if [ "${DEB_BUILD}" = "yes" ];
then
  BUILDARCH="${BUILDARCH}" VERSION="${VERSION}" /app/script/deb-build.sh
fi
