#!/bin/bash
set -euo pipefail
set -x

ROOT="$(dirname $( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd ))"
cd "${ROOT}"
source script/common
IN_DOCKER="${IN_DOCKER:-no}"
VERSION="${VERSION:-devbuild}"
DEB_BUILD="${DEB_BUILD:-no}"

BUILDARCH="${BUILDARCH:-$(uname -m)}"

img=$(latestpibuilder ${BUILDARCH})

if [ "${IN_DOCKER}" = "no" ]; then
  docker run -t --rm \
    -e IN_DOCKER=yes \
    -e BUILDARCH="${BUILDARCH}" \
    -e VERSION="${VERSION}" \
    -e DEB_BUILD="${DEB_BUILD}" \
    -v "${ROOT}":/app \
    -w /src \
    ${img} \
    /app/script/$(basename $0)

  if [ "${DEB_BUILD}" = "yes" ]; then
    echo "Deb build complete"
    git log --decorate --oneline --pretty=%s ${OLD}...master
  fi
  exit
fi

# Everything below is inside docker

cd /app
cp -r \
  cmd \
  internal \
  vendor \
  go.mod \
  go.sum \
  /src/

cp -r /sportslibs/rpi-rgb-led-matrix /src/internal/rgbmatrix-rpi/lib/

cd /src

export CGO_ENABLED=1
export GOCACHE=/app/.cache

go build -o /app/sportsmatrix.${BUILDARCH} -ldflags="-X github.com/robbydyer/sports/internal/sportsmatrix.version=devbuild" ./cmd/sportsmatrix

echo "=> DONE created ${ROOT}/sportsmatrix.${BUILDARCH}"

if [ "${DEB_BUILD}" = "yes" ];
then
  BUILDARCH="${BUILDARCH}" VERSION="${VERSION}" /app/script/deb-build.sh
fi
