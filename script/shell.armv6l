#!/bin/bash
set -euo pipefail

ROOT=$(git rev-parse --show-toplevel)
cd "${ROOT}"
IN_DOCKER="${IN_DOCKER:-no}"
SUFFIX="armv6l"
pibuilder="pibuilder"

if [ "${IN_DOCKER}" = "no" ]; then
  set -x
  source "${ROOT}/script/common"
  pibuilder=$(latestpibuilder)
  buildpibuilder

  exec docker run -it --rm \
    -e IN_DOCKER=yes \
    -v "${ROOT}":/src \
    -w /src \
    ${pibuilder} \
    /src/script/$(basename $0)
fi

# Inside docker

export CGO_ENABLED=1
export GOCACHE=/src/.cache
export GOOS=linux
export GOARCH=arm
export GOARM=6
export CC=arm-linux-gnueabi-gcc
export CXX=arm-linux-gnueabi-g++

set -x
if [ ! -d "${ROOT}/internal/rgbmatrix-rpi/lib/rpi-rgb-led-matrix" ]; then
  if [ -d "${ROOT}/internal/rgmatrix-rpi/lib/rpi-rgb-led-matrix.${SUFFIX}" ]; then
    mv "${ROOT}/internal/rgbmatrix-rpi/lib/rpi-rgb-led-matrix.${SUFFIX}" "${ROOT}/internal/rgbmatrix-rpi/lib/rpi-rgb-led-matrix"
  else
    cp -r "${ROOT}/internal/rgbmatrix-rpi/lib/rpi-rgb-led-matrix.BASE" "${ROOT}/internal/rgbmatrix-rpi/lib/rpi-rgb-led-matrix"
  fi
fi

if [ ! -f "${ROOT}/internal/rgbmatrix-rpi/lib/rpi-rgb-led-matrix/lib/librgbmatrix.so.1" ]; then
  cd "${ROOT}/internal/rgbmatrix-rpi/lib/rpi-rgb-led-matrix"
  make
fi
set +x

cd /src
bash
